---
# removed DAST Scan to work without deployment
# license scanning is now implemented via the SBOM https://docs.gitlab.com/ee/user/compliance/license_scanning_of_cyclonedx_files/
# CI_ACCESS_TOKEN needs to be set to commit manifests back (create a Project access token, Scope: developer, write/read/api access)

default:
  tags: [saas-linux-large-amd64]


stages:
  - build
  - test
#  - dast
  - gitops
  - deploy
  - review

#variables:
#  DAST_WEBSITE: https://prod.catweb.gitops.fun

test:
  stage: test
  image: golang:latest
  script:
    - go install gotest.tools/gotestsum@latest
    - gotestsum --junitfile report.xml --format testname
  artifacts:
    when: always
    reports:
      junit: report.xml


build:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint:
      - ""
  script:
    - echo
      "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}"
      > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile
      $CI_PROJECT_DIR/Dockerfile --destination
      $CI_REGISTRY_IMAGE/main:$CI_COMMIT_SHA
    - echo "registry.gitlab.com/adess-demos/demo/gitops/catweb-gitops/main:$CI_COMMIT_SHA" > updated-image-tag

  artifacts:
    paths:
      - updated-image-tag
    expire_in: 1 hour
  only:
    - main
    - merge_requests

commit-manifests:
  stage: gitops
  image:
    name: docker:latest
    entrypoint:
      - ""
  before_script:
    - apk add --no-cache curl git bash
    - curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash
    - mv kustomize /usr/local/bin/
    - git config --global user.email "adess@gitlab.com"
    - git config --global user.name "@project_52715995_bot_6b64d9457f1f7855fd0996d4c2257368"
  script:
    - cd manifests
    - git remote add gitlab_origin "https://oauth2:${CI_ACCESS_TOKEN}@gitlab.com/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}.git"
    - git fetch gitlab_origin main
    - git checkout -b main gitlab_origin/main
    - rm -rf prod/
    - cat ../updated-image-tag
    - kustomize edit set image "$(cat ../updated-image-tag)"
    - kustomize edit set namespace prod
    - mkdir -p prod
    - kustomize build . > ./prod/k8s-deployment.yaml
    - pwd
    - cat ./prod/k8s-deployment.yaml
    - git status
    - git add ./prod/k8s-deployment.yaml
    - |
      if git diff-index --quiet HEAD --; then
        echo "No changes to commit"
      else
        git commit -m "update manifests for k8s deployment [skip-ci]"
        git push gitlab_origin main
      fi
  environment:
    name: prod
    url: https://prod.catweb.gitops.fun
  rules:
    - if: '$CI_COMMIT_REF_NAME == "main"'
      when: always
    - when: never





review_deploy:
  stage: review
  image:
    name: docker:latest
    entrypoint:
      - ""
  before_script:
    - apk add --no-cache curl git bash
    - curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash
    - mv kustomize /usr/local/bin/
    - echo "registry.gitlab.com/adess-demos/demo/gitops/catweb-gitops/main:$CI_COMMIT_SHA" > updated-image-tag
    - git config --global user.email "adess@gitlab.com"
    - git config --global user.name "@project_52715995_bot_6b64d9457f1f7855fd0996d4c2257368"
  script:
    - cd manifests
    - git remote add gitlab_origin "https://oauth2:${CI_ACCESS_TOKEN}@gitlab.com/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}.git"
    - git fetch gitlab_origin review
    - git checkout -b review gitlab_origin/review
    - rm -rf review/$CI_COMMIT_REF_SLUG
    - kustomize edit set image registry.gitlab.com/adess-demos/demo/gitops/catweb-gitops=registry.gitlab.com/adess-demos/demo/gitops/catweb-gitops:"$(cat ../updated-image-tag)"
    - kustomize edit set namespace review-$CI_COMMIT_REF_SLUG
    - mkdir -p review/$CI_COMMIT_REF_SLUG
    - kustomize build . > review/$CI_COMMIT_REF_SLUG/k8s-deployment.yaml
    - awk '{gsub(/prod.catweb.gitops.fun/,"'${CI_COMMIT_REF_SLUG}'.catweb.gitops.fun")}1' review/$CI_COMMIT_REF_SLUG/k8s-deployment.yaml > review/$CI_COMMIT_REF_SLUG/k8s-deployment-updated.yaml
    - mv review/$CI_COMMIT_REF_SLUG/k8s-deployment-updated.yaml review/$CI_COMMIT_REF_SLUG/k8s-deployment.yaml
    - git status
    - git add review/$CI_COMMIT_REF_SLUG/k8s-deployment.yaml kustomization.yaml
    - echo "checking if any changes were made"

      if git diff-index --quiet HEAD --; then
          echo "No changes to commit"
      else
          git commit -m "update manifests for k8s deployment [skip-ci]"
          git push gitlab_origin review
      fi

  environment:
    name: review/$CI_COMMIT_REF_NAME
    url: https://$CI_COMMIT_REF_SLUG.catweb.gitops.fun
    on_stop: review_destroy
  only:
    - merge_requests
  except:
    - branches



review_destroy:
  stage: review
  image:
    name: docker:latest
    entrypoint:
      - ""
  before_script:
    - apk add --no-cache git
    - git config --global user.email "adess@gitlab.com"
    - git config --global user.name
      "@project_52715995_bot_6b64d9457f1f7855fd0996d4c2257368"
  script:
    - cd manifests
    - git remote add gitlab_origin
      "https://oauth2:${CI_ACCESS_TOKEN}@gitlab.com/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}.git"
    - git fetch gitlab_origin review
    - git checkout review
    - git rm -r review/$CI_COMMIT_REF_SLUG
    - git commit -m "Remove Kubernetes manifests for review environment"
    - git push gitlab_origin review -o ci.skip
  environment:
    name: review/$CI_COMMIT_REF_NAME
    action: stop
  only:
    - merge_requests
  except:
    - branches
  when: manual







include:
  - template: Security/SAST.gitlab-ci.yml
  - template: Jobs/Dependency-Scanning.gitlab-ci.yml
  - template: Security/Container-Scanning.gitlab-ci.yml
#  - template: Security/Secret-Detection.gitlab-ci.yml
#  - template: Security/DAST.gitlab-ci.yml

container_scanning:
  stage: test
  dependencies:
    - build
  variables:
    CS_IMAGE: $CI_REGISTRY_IMAGE/main:$CI_COMMIT_SHA
  rules:
    - if: '$CI_COMMIT_REF_NAME == "main"'
      when: always
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: always